#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
//#include <dt-bindings/zmk/mouse.h>

#include "../zmk-nodefree-config/helper.h"
//#include "../zmk-nodefree-config/keypos_def/keypos_42keys.h"
//#include "../zmk-nodefree-config/international_chars/german.dtsi"


#define XXX &none
#define ___ &trans

#define DEF 0  // layer shortcuts, must match order in which they are defined below
#define SYM 1
#define NAV 2
#define NUM 3

#define QUICK_TAP_MS 175

#define HYPER  LS(LC(LA(LCMD)))
#define MEH    LS(LC(LALT))

&mt {
     flavor = "tap-preferred";
     tapping_term_ms = <220>;
     quick-tap-ms = <220>;              // repeat on tap-into-hold
     hold-trigger-key-positions = <0>;  // tap on interrupt
};

&sk {  // sticky-key config
     release-after-ms = <600>;  // release after 0.6s
     quick-release;             // no double capitalization when rolling keys
};

&sl {  // sticky-layer config
     ignore-modifiers;
};

&lt {  // layer-tap config
     flavor = "balanced";
     tapping-term-ms = <200>;
     quick-tap-ms = <QUICK_TAP_MS>;
};

/ { chosen { zmk,matrix_transform = &default_transform; }; };

ZMK_UNICODE_SINGLE(euro, N2, N0, A, C)  // €
ZMK_BEHAVIOR(hrm, hold_tap,
        flavor = "balanced";
        tapping-term-ms = <280>;
        quick-tap-ms = <125>;
        global-quick-tap;
        bindings = <&kp>, <&kp>;
)
ZMK_BEHAVIOR(ctrl, hold_tap,
        flavor = "balanced";
        tapping-term-ms = <280>;
        quick-tap-ms = <125>;
        global-quick-tap;
        bindings = <&kp LCTRL>, <&kp>;
)
ZMK_BEHAVIOR(opt, hold_tap,
        flavor = "balanced";
        tapping-term-ms = <280>;
        quick-tap-ms = <125>;
        global-quick-tap;
        bindings = <&kp LALT>, <&kp>;
)
ZMK_BEHAVIOR(cmd, hold_tap,
        flavor = "balanced";
        tapping-term-ms = <280>;
        quick-tap-ms = <125>;
        global-quick-tap;
        bindings = <&kp LCMD>, <&kp>;
)
// tap: space | double-tap: dot | hold: HYPER
ZMK_BEHAVIOR(spc_dt_hpr, tap_dance,
        tapping-term-ms = <200>;
        bindings = <&mt HYPER SPACE>, <&kp DOT>;
)
// tap: Play/Pause | double-tap: Nexti
ZMK_BEHAVIOR(play_pause_next, tap_dance,
        tapping-term-ms = <200>;
        bindings = <&kp C_PLAY_PAUSE>, <&kp C_NEXT>;
)
// tap: Play/Pause | double-tap: Next
ZMK_BEHAVIOR(vol_mute_up_down, tap_dance,
        tapping-term-ms = <200>;
        bindings = <&mt K_MUTE C_VOLUME_UP>, <&kp C_VOLUME_DOWN>;
)
// tap: backspace | shift + tap: delete | hold: num layer
ZMK_BEHAVIOR(bs_del_num, mod_morph,
    bindings = <&lt NUM BSPC>, <&kp DEL>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
)

ZMK_LAYER(Default,
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
          &kp ESC       &kp Y         &kp C         &kp L         &kp M         &kp K             &kp Z         &kp F         &kp U         &kp COMMA     &bs_del_num   &to NUM
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &kp TAB       &kp I         &hrm LCTRL S  &hrm LALT R   &hrm LCMD T   &kp G             &kp P         &hrm LCMD N   &hrm LALT E   &hrm LCTRL A  &kp O         &play_pause_next
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &sk LSHFT     &kp Q         &kp V         &kp W         &kp D         &kp J             &kp B         &kp H         &kp FSLH      &kp DOT       &kp X         &vol_mute_up_down
     // ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                                                    &sk LCMD      &sk LSHIFT    &spc_dt_hpr       &kp ENTER     &to 1         &sk LCTRL 
     //                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
)
ZMK_LAYER(Symbol,
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
          &kp ESC       &kp euro      &kp AT        &kp HASH      &kp DOLLAR    &kp PERCENT       &kp TILDE     &kp LBKT      &kp RBKT      &kp AMPS      &bs_del_num   &to NUM
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &kp TAB       &kp SEMI     &ctrl PLUS     &opt MINUS    &cmd DQT      &kp EXCL          &kp SLASH     &cmd LBRC     &opt RBRC     &ctrl PIPE    &kp LT        &play_pause_next
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &sk LSHFT     &kp COLON     &kp EQUAL     &kp UNDER     &kp SQT       &kp QMARK         &kp STAR      &kp LPAR      &kp RPAR      &kp BSLH      &kp GT        &vol_mute_up_down
     // ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                                                    &sk LCMD      &to 0         &spc_dt_hpr       &kp ENTER     &to 2         &sk LCTRL 
     //                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
)
ZMK_LAYER(Navigation,
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
          &kp ESC       &kp XXX       &kp XXX       &kp UP        &kp XX X      &kp XXX           &kp XXX       &kp XXX       &kp UP        &kp XXX       &bs_del_num   &to NUM
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &kp TAB       &kp XXX       &kp LEFT      &kp DOWN      &kp RIGHT     &kp XXX           &kp XXX       &kp LEFT      &kp DOWN      &kp RIGHT     &kp XXX       &play_pause_next
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &sk LSHFT     &kp XXX       &kp XXX       &kp XXX       &kp XXX       &kp XXX           &kp XXX       &kp XXX       &kp XXX      &kp XXX        &kp XXX       &vol_mute_up_down
     // ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                                                    &sk LCMD      &to 0         &spc_dt_hpr       &kp ENTER     &to 3         &sk LCTRL 
     //                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
)
ZMK_LAYER(Number,
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
          &kp ESC      &kp KP_DIVIDE  &kp N7        &kp N8        &kp N9        &kp KP_MINUS      &kp K_MUTE    &kp C_VOL_DOWN &kp C_VOL_UP &kp XXX       &bs_del_num   &to NUM
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &kp TAB      &kp KP_MULTIPLY &kp N4       &kp N5        &kp N6        &kp KP_PLUS       &kp C_PLAY_PAUSE &kp C_PREV &kp C_NEXT    &kp XXX       &kp XXX      &play_pause_next
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &sk LSHFT     &kp N0        &kp N1        &kp N2        &kp N3        &kp KP_EQUAL      &kp XXX       &kp C_BRI_DN  &kp C_BRI_UP  &kp XXX       &kp XXX      &vol_mute_up_down
     // ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                                                    &sk LCMD      &to 0         &spc_dt_hpr       &kp ENTER     &to 1         &sk LCTRL 
     //                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
)