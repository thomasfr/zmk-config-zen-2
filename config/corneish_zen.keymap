#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
//#include <dt-bindings/zmk/mouse.h>

//#define HOST_OS 2 // macOS
#include "../zmk-nodefree-config/helper.h"
#include "../zmk-nodefree-config/keypos_def/keypos_42keys.h"
#include "../zmk-nodefree-config/international_chars/german.dtsi"


#define XXX &none
#define ___ &trans

#define DEF 0  // layer shortcuts, must match order in which they are defined below
#define SYM 1
#define NAV 2
#define NUM 3

#define QUICK_TAP_MS 175

#define HYPER  LS(LC(LA(LCMD)))
#define MEH    LS(LC(LALT))

&mt {
     flavor = "tap-preferred";
     tapping_term_ms = <220>;
     quick-tap-ms = <220>;              // repeat on tap-into-hold
     hold-trigger-key-positions = <0>;  // tap on interrupt
};

&sk {  // sticky-key config
     release-after-ms = <1000>;  // release after 0.6s
     quick-release;              // no double capitalization when rolling keys
};

//&sl {  // sticky-layer config
//     ignore-modifiers;
//};
//&lt {  // layer-tap config
//     flavor = "balanced";
//     tapping-term-ms = <200>;
//     quick-tap-ms = <QUICK_TAP_MS>;
//};

//ZMK_COMBO(copy,  &kp LG(C), LM3 LM2, ALL)
//ZMK_COMBO(paste, &kp LG(V), LM2 LM1, ALL)

/ {
    combos {
        compatible = "zmk,combos";
        combo_copy {
            timeout-ms = <80>;
            key-positions = <LM3 LM2>;
            bindings = <&kp LG(C)>;
        };
        combo_paste {
            timeout-ms = <80>;
            key-positions = <LM2 LM1>;
            bindings = <&kp LG(V)>;
        };
    };
};

//ZMK_UNICODE_SINGLE(euro, N2, N0, A, C)  // €
ZMK_BEHAVIOR(hrm, hold_tap,
        flavor = "balanced";
        tapping-term-ms = <250>;
        quick-tap-ms = <125>;
        global-quick-tap;
        bindings = <&kp>, <&kp>;
)
// tap: space | double-tap: dot | hold: HYPER
ZMK_BEHAVIOR(spc_dt_hpr, tap_dance,
        tapping-term-ms = <180>;
        bindings = <&mt HYPER SPACE>, <&kp DOT>;
)
// tap: none | double-tap: reset | tripple-tap: bootloader
ZMK_BEHAVIOR(rst_bootloader, tap_dance,
        tapping-term-ms = <200>;
        bindings = <&none>, <&reset>, <&bootloader>;
)
// tap: Play/Pause | double-tap: Next
ZMK_BEHAVIOR(play_pause_next, tap_dance,
        tapping-term-ms = <200>;
        bindings = <&kp C_PLAY_PAUSE>, <&kp C_NEXT>;
)
// tap: Play/Pause | double-tap: Next
ZMK_BEHAVIOR(vol_mute_up_down, tap_dance,
        tapping-term-ms = <200>;
        bindings = <&mt K_MUTE C_VOLUME_UP>, <&kp C_VOLUME_DOWN>;
)
// tap: backspace | shift + tap: delete | hold: num layer
ZMK_BEHAVIOR(bs_del, mod_morph,
    bindings = <&kp BSPC>, <&kp DEL>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
)
// tap: O | CMD + O: Backspace
ZMK_BEHAVIOR(o_cmd_bsp, mod_morph,
    bindings = <&kp O>, <&kp BSPC>;
    mods = <(MOD_LGUI|MOD_RGUI)>;
)
// tap: O | CMD + O: Backspace
ZMK_BEHAVIOR(cmd_tab, mod_morph,
    bindings = <&kp TAB>, <&kt LCMD>;
    mods = <(MOD_LGUI|MOD_RGUI)>;
    keep-mods = <(MOD_LGUI)>;
)

ZMK_LAYER(Default,
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
          &kp ESC       &kp Y         &kp C         &kp L         &kp M         &kp K             &kp Z         &kp F         &kp U       &mt SEMI COMMA  &mt DQT SQT &to NAV
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &cmd_tab      &kp I         &hrm LCTRL S  &hrm LALT R   &hrm LCMD T   &kp G             &kp P         &hrm LCMD N   &hrm LALT E   &hrm LCTRL A  &o_cmd_bsp    &play_pause_next
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &sk LSHFT     &kp Q         &kp V         &kp W         &kp D         &kp J             &kp B         &kp H         &kp FSLH    &mt COLON DOT   &kp X       &vol_mute_up_down
     // ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                                                    &sk LCMD      &sk LSHIFT    &spc_dt_hpr       &kp ENTER     &to 1         &sk LCTRL 
     //                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
)
ZMK_LAYER(Symbol,
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
          &kp ESC      &kp LS(LA(N2)) &kp AT        &kp HASH      &kp DOLLAR    &kp PERCENT       &kp TILDE     &kp LBKT      &kp RBKT      &kp AMPS      &kp LT      &to NAV
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &cmd_tab      &kp SEMI    &hrm LCTRL PLUS &hrm LALT MINUS &hrm LCMD DQT &kp EXCL         &kp SLASH   &hrm LCMD LBRC &hrm LALT RBRC &hrm LCTRL PIPE &bs_del  &play_pause_next
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &sk LSHFT     &kp COLON     &kp EQUAL     &kp UNDER     &kp SQT       &kp QMARK         &kp STAR      &kp LPAR      &kp RPAR      &kp BSLH      &kp GT      &vol_mute_up_down
     // ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                                                    &sk LCMD      &to 0         &spc_dt_hpr       &kp ENTER     &to 2         &sk LCTRL 
     //                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
)
ZMK_LAYER(Navigation,
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
          &kp ESC       XXX           XXX           &kp UP        XXX           XXX               XXX           XXX           &kp UP        XXX           XXX         &to NAV
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &cmd_tab      XXX         &hrm LCTRL LEFT &hrm LALT DOWN &hrm LCMD RIGHT  XXX           XXX         &hrm LCMD LEFT &hrm LALT DOWN &hrm LCTRL RIGHT &bs_del  &play_pause_next
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &sk LSHFT     XXX           XXX           XXX           XXX         &rst_bootloader   &rst_bootloader XXX           XXX           XXX           XXX         &vol_mute_up_down
     // ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                                                    &sk LCMD      &to 0         &spc_dt_hpr       &kp ENTER     &to 3         &sk LCTRL 
     //                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
)
ZMK_LAYER(Number,
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
          &kp ESC      &kp KP_DIVIDE  &kp N7        &kp N8        &kp N9        &kp KP_MINUS      &kp K_MUTE    &kp C_VOL_DN &kp C_VOL_UP   XXX           XXX         &to NAV
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &cmd_tab      &kp KP_MULTIPLY &kp N4       &kp N5        &kp N6        &kp KP_PLUS       &kp C_PP      &kp C_PREV    &kp C_NEXT    XXX           &bs_del     &play_pause_next
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &sk LSHFT     &kp N0        &kp N1        &kp N2        &kp N3        &kp KP_EQUAL      XXX           &kp C_BRI_DN  &kp C_BRI_UP  XXX           XXX         &vol_mute_up_down
     // ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                                                    &sk LCMD      &to 0         &spc_dt_hpr       &kp ENTER     &to 1         &sk LCTRL 
     //                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
)

/ { chosen { zmk,matrix_transform = &default_transform; }; };