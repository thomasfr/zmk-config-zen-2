#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
//#include <dt-bindings/zmk/mouse.h>

#include "../zmk-nodefree-config/helper.h"
//#include "../zmk-nodefree-config/keypos_def/keypos_42keys.h"
//#include "../zmk-nodefree-config/international_chars/german.dtsi"


#define ___ &trans

#define DEF 0  // layer shortcuts, must match order in which they are defined below
#define SYM 1
#define NAV 2
#define NUM 3

&mt {
        flavor = "tap-preferred";
        tapping_term_ms = <200>;
};

//&mmv {
//        time-to-max-speed-ms = <680>;
//        acceleration-exponent = <2>;
//};

/ {
        chosen {
                zmk,matrix_transform = &default_transform;
                //zmk,matrix_transform = &five_column_transform;
        };
};

ZMK_BEHAVIOR(hrm, hold_tap,
        flavor = "balanced";
        tapping-term-ms = <280>;
        quick-tap-ms = <125>;
        global-quick-tap;
        bindings = <&kp>, <&kp>;
)
ZMK_BEHAVIOR(tdspace, tap_dance,
        tapping-term-ms = <200>;
        bindings = <&eol_question>, <&eol_dot>, <&eol_exclamation>;
)
// tap: backspace | shift + tap: delete | hold: num layer
ZMK_BEHAVIOR(bs_del_num, mod_morph,
    bindings = <&lt NUM BSPC>, <&kp DEL>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
)
// windows sleep macro
ZMK_BEHAVIOR(eol_question, macro,
    wait-ms = <100>;
    tap-ms = <5>;
    bindings = <&mt QUESTION SPACE>;
)
ZMK_BEHAVIOR(eol_exclamation, macro,
    wait-ms = <100>;
    tap-ms = <5>;
    bindings = <&kp EXCLAMATION &kp SPACE>;
)
ZMK_BEHAVIOR(eol_dot, macro,
    wait-ms = <100>;
    tap-ms = <5>;
    bindings = <&kp DOT &kp SPACE>;
)

ZMK_LAYER(Default,
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
          &kp ESC       &kp Y         &kp C         &kp L         &kp M         &kp K             &kp Z         &kp F         &kp U         &kp COMMA     &bs_del_num   &to NUM
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &kp TAB       &kp I         &kp S         &hrm LALT R   &hrm LCMD T   &kp G             &kp P         &hrm LCMD N   &hrm LALT E   &kp A         &kp O         &kp C_PLAY_PAUSE
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &kp LSHFT     &kp Q         &kp V         &kp W         &kp D         &kp J             &kp B         &kp H         &kp FSLH      &kp DOT       &kp X         &kp K_MUTE
     // ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                                                    &kp LSHFT     &mt LC(LS(LALT)) LCTRL &kp ENTER &tdspace     &kp LS(LC(LA(LCMD))) &to SYM
     //                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
)
ZMK_LAYER(Symbol,
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
          &kp ESC       &kp Y         &kp C         &kp L         &kp M         &kp K             &kp Z         &kp F         &kp U         &kp COMMA     &bs_del_num   &to NUM
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &kp TAB       &kp I         &kp S         &hrm LALT R   &hrm LCMD T   &kp G             &kp P         &hrm LCMD N   &hrm LALT E   &kp A         &kp O         &kp C_PLAY_PAUSE
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &kp LSHFT     &kp Q         &kp V         &kp W         &kp D         &kp J             &kp B         &kp H         &kp FSLH      &kp DOT       &kp X         &kp K_MUTE
     // ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                                                    &to DEF       &mt LC(LS(LALT)) LCTRL &kp ENTER &tdspace     &kp LS(LC(LA(LCMD))) &to NAV
     //                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
)
ZMK_LAYER(Navigation,
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
          &kp ESC       &kp Y         &kp C         &kp L         &kp M         &kp K             &kp Z         &kp F         &kp U         &kp COMMA     &bs_del_num   &to NUM
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &kp TAB       &kp I         &kp S         &hrm LALT R   &hrm LCMD T   &kp G             &kp P         &hrm LCMD N   &hrm LALT E   &kp A         &kp O         &kp C_PLAY_PAUSE
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &kp LSHFT     &kp Q         &kp V         &kp W         &kp D         &kp J             &kp B         &kp H         &kp FSLH      &kp DOT       &kp X         &kp K_MUTE
     // ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                                                    &to DEF       &mt LC(LS(LALT)) LCTRL &kp ENTER &tdspace     &kp LS(LC(LA(LCMD))) &to NUM
     //                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
)
ZMK_LAYER(Number,
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
          &kp ESC       &kp Y         &kp C         &kp L         &kp M         &kp K             &kp Z         &kp F         &kp U         &kp COMMA     &bs_del_num   &to NUM
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &kp TAB       &kp I         &kp S         &hrm LALT R   &hrm LCMD T   &kp G             &kp P         &hrm LCMD N   &hrm LALT E   &kp A         &kp O         &kp C_PLAY_PAUSE
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &kp LSHFT     &kp Q         &kp V         &kp W         &kp D         &kp J             &kp B         &kp H         &kp FSLH      &kp DOT       &kp X         &kp K_MUTE
     // ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                                                    &to DEF       &mt LC(LS(LALT)) LCTRL &kp ENTER &tdspace     &kp LS(LC(LA(LCMD))) &to DEF
     //                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
)